user www-data;
#worker_processes 4;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 100000;

events {

    #worker_connections 1024;
    #worker_connections 8192;
    worker_connections 4000;
    use epoll;
    multi_accept on;

}

http {

    #http auth
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;

    #logs
    error_log /var/log/nginx/error.log crit;
    access_log off;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 30;
    send_timeout 10;

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    #for security
    server_tokens off;

    #gzip             on;
    #gzip_comp_level  2;
    #gzip_min_length  1000;
    #gzip_proxied     expired no-cache no-store private auth;
    #gzip_types       text/plain application/x-javascript text/xml text/css application/xml;

    #default
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # Configuration containing list of application servers
    upstream app_servers {
        server unix:/tmp/unix_predictry_socket_1.sock fail_timeout=0;
        server unix:/tmp/unix_predictry_socket_2.sock fail_timeout=0;
        server unix:/tmp/unix_predictry_socket_3.sock fail_timeout=0;
        server unix:/tmp/unix_predictry_socket_4.sock fail_timeout=0;
    }

    #security
    # limit the number of connections per single IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # limit the number of requests for a given session
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

    # Configuration for Nginx
    server {

        #security
        limit_conn conn_limit_per_ip 10;
        limit_req zone=req_limit_per_ip burst=10 nodelay;

        # Running port
        listen 80;

        # Settings to serve static files 
        location ^~ /static/  {

            # Example:
            # root /full/path/to/application/static/file/dir;
            # root /app/static/;

        }

        # Serve a static file (ex. favico)
        # outside /static directory
        location = /favico.ico  {
            #root /app/favico.ico;

        }

        # Proxy connections to the application servers
        # app_servers
        location / {

            proxy_pass         http://app_servers;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

        }
    }

    #virtual hosts

	#include /etc/nginx/conf.d/*.conf;
	#include /etc/nginx/sites-enabled/*;
}